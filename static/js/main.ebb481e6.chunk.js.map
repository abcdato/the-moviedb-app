{"version":3,"sources":["components/MovieCard/MovieCard.jsx","api/MovieService.js","components/MovieList/MovieList.jsx","components/App/App.jsx","index.js","fonts/Inter/Inter-Regular.woff2"],"names":["MovieCard","title","releaseDate","overview","posterPath","date","format","Date","posterUrl","posterImg","className","src","alt","text","str","num","useWordBoundary","length","subString","substr","lastIndexOf","truncate","empty","description","defaultProps","MoviesAPI","key","url","getData","a","fetch","res","json","data","getMovies","query","page","movies","tranformData","totalPages","total_pages","totalResults","total_results","Error","results","map","item","id","release_date","poster_path","MovieList","movieService","MovieService","state","currentPage","loading","error","errorMessage","debouncedLoadData","debounce","loadData","onError","message","setState","onPageChange","onInputChange","event","target","value","trim","showMovies","movie","prevProps","prevState","this","hasData","spinner","size","content","errorMsg","type","showIcon","pagination","current","pageSize","showSizeChanger","onChange","total","placeholder","Component","App","app","React","createElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebb481e6.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Empty } from 'antd';\n\nimport './MovieCard.scss';\n\nconst MovieCard = ({ title, releaseDate, overview, posterPath }) => {\n  function truncate(str, num, useWordBoundary) {\n    if (str.length <= num) {\n      return str;\n    }\n    const subString = str.substr(0, num - 1);\n    return `${useWordBoundary ? subString.substr(0, subString.lastIndexOf(' ')) : subString} ...`;\n  }\n\n  const date = releaseDate ? format(new Date(releaseDate), 'MMMM Q, y') : null;\n  const posterUrl = `https://image.tmdb.org/t/p/w200/${posterPath}`;\n  const posterImg = <img className=\"card__poster\" src={posterUrl} alt=\"movie poster\" />;\n  const text = overview ? truncate(overview, 160, true) : null;\n  const empty = <Empty description=\"Image Not Found\" />;\n\n  return (\n    <li className=\"movie-card card\">\n      <div className=\"card__poster-wrapper\">{posterPath ? posterImg : empty}</div>\n      <div className=\"card__properties\">\n        <h3 className=\"card__title\">{title}</h3>\n        <div className=\"card__release-date\">{date}</div>\n        <div className=\"card__genres\">\n          <div className=\"card__genre\">action</div>\n          <div className=\"card__genre\">drama</div>\n        </div>\n        <p className=\"card__overview\">{text}</p>\n      </div>\n    </li>\n  );\n};\n\nMovieCard.defaultProps = {\n  posterPath: '',\n  releaseDate: '',\n};\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string,\n  overview: PropTypes.string.isRequired,\n  posterPath: PropTypes.string,\n};\n\nexport default MovieCard;\n","class MoviesAPI {\n  key = '1be9a44c716204acb901eac3dee95b08';\n\n  url = 'https://api.themoviedb.org/3/search/movie';\n\n  getData = async (url) => {\n    const res = await fetch(`${this.url}?api_key=${this.key}${url}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  getMovies = async (query, page) => {\n    try {\n      if (query) {\n        const data = await this.getData(`&query=${query}&page=${page}`);\n        const movies = this.tranformData(data);\n        const totalPages = data.total_pages;\n        const totalResults = data.total_results;\n\n        return { movies, totalPages, totalResults };\n      }\n      return false;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  tranformData = (data) =>\n    data.results.map((item) => ({\n      id: item.id,\n      title: item.title,\n      releaseDate: item.release_date,\n      overview: item.overview,\n      posterPath: item.poster_path,\n    }));\n}\n\nexport default MoviesAPI;\n","import React, { Component } from 'react';\nimport { Alert, Spin, Input, Pagination } from 'antd';\nimport debounce from 'lodash.debounce';\nimport MovieCard from '../MovieCard/MovieCard';\n\nimport MovieService from '../../api/MovieService';\n\nimport './MovieList.scss';\n\nclass MovieList extends Component {\n  movieService = new MovieService();\n\n  state = {\n    movies: [],\n    totalPages: null,\n    query: '',\n    currentPage: 1,\n    loading: false,\n    error: false,\n    errorMessage: '',\n  };\n\n  debouncedLoadData = debounce(this.loadData, 750);\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query, currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.loadData(query, currentPage);\n    }\n  }\n\n  onError = (message) => {\n    this.setState(() => ({\n      loading: false,\n      error: true,\n      errorMessage: message,\n    }));\n  };\n\n  onPageChange = (page) => {\n    this.setState(() => ({\n      currentPage: page,\n      loading: true,\n    }));\n  };\n\n  onInputChange = (event) => {\n    this.setState(\n      () => ({\n        query: event.target.value,\n        currentPage: 1,\n        loading: true,\n      }),\n      () => {\n        const { query } = this.state;\n        this.debouncedLoadData(query.trim());\n      }\n    );\n  };\n\n  showMovies = (data) =>\n    data &&\n    data.map((movie) => {\n      const { id, title, releaseDate, overview, posterPath } = movie;\n\n      return <MovieCard key={id} title={title} releaseDate={releaseDate} overview={overview} posterPath={posterPath} />;\n    });\n\n  async loadData(movie, page = 1) {\n    try {\n      const data = await this.movieService.getMovies(movie, page);\n\n      if (movie && !data.totalResults) {\n        this.onError(\"Unfortunately we couldn't find any movies\");\n      } else if (movie && data.totalResults) {\n        this.setState(() => ({\n          movies: data.movies,\n          totalPages: data.totalPages,\n          loading: false,\n          error: false,\n        }));\n      } else if (!data) {\n        this.setState(() => ({\n          movies: [],\n          loading: false,\n          error: false,\n        }));\n      }\n    } catch {\n      this.onError(\"Couldn't load the data.\");\n    }\n  }\n\n  render() {\n    const { movies, totalPages, currentPage, loading, query, error, errorMessage } = this.state;\n\n    const hasData = !(loading || error) && movies.length !== 0;\n    const spinner = loading ? <Spin size=\"large\" /> : null;\n    const content = hasData ? this.showMovies(movies) : null;\n    const errorMsg = error ? <Alert message=\"Error\" description={errorMessage} type=\"warning\" showIcon /> : null;\n\n    const pagination = hasData ? (\n      <Pagination\n        current={currentPage}\n        pageSize={1}\n        showSizeChanger={false}\n        onChange={this.onPageChange}\n        total={totalPages}\n      />\n    ) : null;\n\n    return (\n      <>\n        <header className=\"header\">\n          <Input placeholder=\"Type to search...\" value={query} onChange={this.onInputChange} />\n        </header>\n        <main className=\"main\">\n          <ul className=\"movie-list list\">\n            {spinner}\n            {errorMsg}\n            {content}\n          </ul>\n        </main>\n        <footer className=\"footer\">{pagination}</footer>\n      </>\n    );\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\nimport MovieList from '../MovieList/MovieList';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <MovieList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport './fonts/Inter/Inter-Regular.woff2';\n\nconst app = React.createElement(App);\n\nReactDOM.render(app, document.getElementById('root'));\n","export default __webpack_public_path__ + \"static/media/Inter-Regular.133ad199.woff2\";"],"sourceRoot":""}